/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vistas;

import Control.ControlGeneral;
import Modelo.ModeloDatosMultiple;
import java.awt.Color;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import org.apache.poi.ss.usermodel.HorizontalAlignment;

/**
 *
 * @author MERRY
 */
public class VistaInicio extends javax.swing.JPanel {
    public List<Map<String, String>> ListaFincas;
    public List<Map<String, String>> ListaFincasMostrar;
    public List<Map<String, String>> ListaFincasInforme;
    public List<Map<String, String>> ListaInformacionGrupos;
    public List<Map<String, String>> ListaGruposInforme;
    public List<Map<String, String>> ListaGruposEncabezado;
    
    public ControlGeneral controlgen = new ControlGeneral();
    public int cantpnlFincas = 3;
    public int cantpnlInformes = 0;
    public VistaPrincipal vPrin;
    public int ind = 0;
    public ArrayList<ModeloDatosMultiple> Lista_Fincas_pnl = new ArrayList<>();
    public ArrayList<ModeloDatosMultiple> Lista_Informe_pnl = new ArrayList<>();
    /**
     * Creates new form VistaInicio
     */
    public VistaInicio() {
        initComponents();
        ListaFincas = new ArrayList<>();
        ListaFincasMostrar = new ArrayList<>();
        ListaFincasInforme = new ArrayList<>();
        CargarFincas();
        LlenarPnlFincas();
    }

    public VistaInicio(VistaPrincipal vPrin) {
        initComponents();
        this.vPrin = vPrin;
        ListaFincas = new ArrayList<>();
        ListaFincasMostrar = new ArrayList<>();
        ListaFincasInforme = new ArrayList<>();
        ListaInformacionGrupos = new ArrayList<>();
        ListaGruposInforme = new ArrayList<>();
        ListaGruposEncabezado = new ArrayList<>();
        CargarFincas();
        LlenarPnlFincas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrpnlsFincas = new javax.swing.JScrollPane();
        pnlFincas = new javax.swing.JPanel();
        scrpnlsInforme = new javax.swing.JScrollPane();
        pnlInforme = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        scrpnlsFincas.setBackground(new java.awt.Color(255, 255, 255));
        scrpnlsFincas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(59, 123, 50)), "Fincas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(59, 123, 50))); // NOI18N
        scrpnlsFincas.setForeground(new java.awt.Color(59, 123, 50));

        pnlFincas.setBackground(new java.awt.Color(255, 255, 255));
        pnlFincas.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                pnlFincasComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                pnlFincasComponentRemoved(evt);
            }
        });
        pnlFincas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        scrpnlsFincas.setViewportView(pnlFincas);

        add(scrpnlsFincas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 690, 80));

        scrpnlsInforme.setBackground(new java.awt.Color(255, 255, 255));
        scrpnlsInforme.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(59, 123, 50)));
        scrpnlsInforme.setForeground(new java.awt.Color(59, 123, 50));

        pnlInforme.setBackground(new java.awt.Color(255, 255, 255));
        pnlInforme.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                pnlInformeComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                pnlInformeComponentRemoved(evt);
            }
        });
        pnlInforme.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        scrpnlsInforme.setViewportView(pnlInforme);

        add(scrpnlsInforme, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 690, 330));
    }// </editor-fold>//GEN-END:initComponents

    private void pnlFincasComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_pnlFincasComponentAdded
        //pnlGrupos.repaint();
    }//GEN-LAST:event_pnlFincasComponentAdded

    private void pnlFincasComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_pnlFincasComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlFincasComponentRemoved

    private void pnlInformeComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_pnlInformeComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlInformeComponentAdded

    private void pnlInformeComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_pnlInformeComponentRemoved
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlInformeComponentRemoved


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pnlFincas;
    private javax.swing.JPanel pnlInforme;
    private javax.swing.JScrollPane scrpnlsFincas;
    private javax.swing.JScrollPane scrpnlsInforme;
    // End of variables declaration//GEN-END:variables

    private void CargarFincas() {
        ListaFincas = controlgen.GetComboBox("SELECT distinct finc.`id` AS ID, finc.`descripcion` AS DESCRIPCION\n" +
                                                "FROM `fincas` finc\n" +
                                                "INNER JOIN `tipo_animales` tipo ON tipo.`id_finca` = finc.`id`\n" +
                                                "INNER JOIN grupos grup ON grup.`id_tipo_animal` = tipo.`id`\n" +
                                                "iNNER JOIN `traslado_animalxgrupo` traslado ON traslado.`id_finca` = finc.`id` AND \n" +
                                                "traslado.`id_grupo` = grup.`id` AND traslado.`estado` = 'Activo'\n" +
                                                "GROUP BY finc.`id`, grup.`id` \n" +
                                                "ORDER BY grup.`id` ASC ");
        LLenarListaMostrar();
    }
    private void LLenarListaMostrar(){
        for(Map<String, String> obj: ListaFincas){
            ListaFincasMostrar.add(obj);
        }
    }
    
    //<editor-fold defaultstate="collapsed" desc="Mostrar Grupos Panel">
    private void LlenarPnlFincas() {
        System.out.println("********LlenarPnlGrupos********");
        System.out.println("ListaGruposSeleccionados.size()->" + ListaFincasMostrar.size());
        for (int i = 0; i < ListaFincasMostrar.size(); i++) {
            Lista_Fincas_pnl.add(
                    new ModeloDatosMultiple(
                            Integer.parseInt(ListaFincasMostrar.get(i).get("ID")), // ID
                            ListaFincasMostrar.get(i).get("DESCRIPCION"), // DATO
                            getOriXFincas(i), // X
                            getOriYFincas(i), // Y
                            175, // widthPnl
                            140, // widthLblD
                            35, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3));          // padding
        }
        MostrarFincasSeleccionados();
    }

    public int getOriXFincas(int tam) {
        int ret = -1;
        int filas = tam / cantpnlFincas;
        int mod = tam % cantpnlFincas;
        ret = 3 + (mod * (175 + 3));
        return ret;
    }

    private int getOriYFincas(int tam) {
        int ret = -1;
        int filas = tam / cantpnlFincas;
        int mod = tam % cantpnlFincas;
        ret = 3 + (filas * (25 + 3));
        return ret;
    }

    private void MostrarFincasSeleccionados() {
        System.out.println("*****************MostrarSeleccionados***************+" + Lista_Fincas_pnl.size());
        ind = -1;
        System.out.println("Lista_Grupos_Seleccionados-->" + Lista_Fincas_pnl.size());
        pnlFincas.removeAll();
        repaint();

        for (ModeloDatosMultiple obj : Lista_Fincas_pnl) {
            ind++;
            javax.swing.JPanel pnlDato = new javax.swing.JPanel();
            javax.swing.JLabel lblnombre = new javax.swing.JLabel();
            javax.swing.JLabel lblCerrar = new javax.swing.JLabel();
            ///[26,82,118]
            pnlDato.setBackground(new java.awt.Color(59, 123, 50));
            pnlDato.setForeground(new java.awt.Color(255, 255, 255));
            pnlDato.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            pnlDato.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(59, 123, 50), 1, true));
            pnlDato.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            lblnombre.setText(obj.getDatosMostrar());
            lblnombre.setForeground(new java.awt.Color(255, 255, 255));

            lblCerrar.setFont(new java.awt.Font("Tahoma", 1, 12));
            //lblCerrar.setText("X");//MousePressed
            lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/verBlanco.png")));
            lblCerrar.setName("" + ind);
            lblCerrar.setForeground(new java.awt.Color(255, 255, 255));
            lblCerrar.setCursor(new Cursor(Cursor.HAND_CURSOR));
            lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    int indr = Integer.parseInt(evt.getComponent().getName());
                    ActualizarGruposSeleccionados(indr);
//                    Lista_Animales_Seleccionados.remove(indr);
//                    RecargarListaSeleccionados();
//                    MostrarAnimalesSeleccionados(); 
                }
            });
            pnlDato.setToolTipText(obj.getDatosMostrar());
            pnlDato.add(lblnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 3, obj.getWidthLblD(), obj.getHeight()));
            pnlDato.add(lblCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(3 + obj.getWidthLblD(), 3, obj.getWidthLblC(), obj.getHeight()));
            System.out.println("obj.getX()-->" + obj.getDatosMostrar());
            System.out.println("obj.getX()-->" + obj.getX());
            System.out.println("obj.getY()-->" + obj.getY());
            pnlFincas.add(pnlDato, new org.netbeans.lib.awtextra.AbsoluteConstraints(obj.getX(), obj.getY(), obj.getWidthPnl(), obj.getHeightPnl()));
            pnlFincas.repaint();
        }

        System.out.println("*********ancho=("+this.getWidth()+")***********");
        System.out.println("*********alto=("+this.getHeight()+")***********");
        vPrin.pnlContenedor.setSize(this.getWidth(), this.getHeight()+40);
        //vPrin.setSize(this.getWidth(), this.getHeight()+40);
        vPrin.pack();
    }

    private void ActualizarGruposSeleccionados(int ind) {
//        Lista_Animales_Mostrar.add(Lista_Animales_Seleccionados.get(ind));
        Map<String, String> datos = new HashMap<>();
        datos.put("ID", ""+Lista_Fincas_pnl.get(ind).getId());
        datos.put("DESCRIPCION", Lista_Fincas_pnl.get(ind).getDatosMostrar());
        ListaFincasInforme.add(datos);
        Lista_Fincas_pnl.remove(ind);
        
        System.out.println("Lista_Fincas_pnl************"+Lista_Fincas_pnl.size());
        RecargarListaSeleccionados();
        MostrarFincasSeleccionados();
        
        Lista_Informe_pnl = new ArrayList<>();
        pnlInforme.removeAll();
        repaint();
        ImprimirDatos();
    }

    private void RecargarListaSeleccionados() {
        int ind = -1;
        for (ModeloDatosMultiple obj : Lista_Fincas_pnl) {
            ind++;
            obj.setX(getOriXFincas(ind));
            obj.setY(getOriYFincas(ind));
            
            obj.setWidthPnl(175);
            obj.setWidthLblD(140);
            obj.setHeightPnl(25);
            obj.setWidthLblC(35);
        }
    }

    //</editor-fold>    

    private void ImprimirDatos() {
        for(int i = 0; i < ListaFincasInforme.size(); i++){
            System.out.println("i--->"+i);
            System.out.println(""+ListaFincasInforme.get(i).get("ID"));
            System.out.println(""+ListaFincasInforme.get(i).get("DESCRIPCION"));
            System.out.println("******************************");
        }
        if(ListaFincasInforme.size()> 0){
            LlenarGrupos();
            MostrarInforme();
        }
    }

    public void LlenarGrupos(){
        String in = getIN(ListaFincasInforme);
        ListaInformacionGrupos = new ArrayList<>();
        ListaInformacionGrupos = controlgen.GetComboBox("SELECT finc.`id` AS IDFINCA, macr.`id` AS IDMACROGRUPO, macr.`descripcion` AS MACROGRUPO, \n" +
                                                            "tipo.`id` AS IDTIPO, tipo.`descripcion` AS TIPOANIMAL,\n" +
                                                            "grup.`id` AS IDGRUPO, grup.`descripcion` AS GRUPO, \n" +
                                                            "IFNULL(bloq.`id`, 0) AS IDBLOQUE, CONCAT('Bloque ', IFNULL(bloq.`numero`, 0)) AS  BLOQUE, \n" +
                                                            "IFNULL(lot.`id`, 0) AS IDLOTE, CONCAT('Lote ', IFNULL(lot.numero, 0)) AS LOTE, \n" +
                                                            "COUNT(grup.`id`) SUMAANIMALES\n" +
                                                            "FROM fincas finc\n" +
                                                            "INNER JOIN `tipo_animales` tipo ON tipo.`id_finca` = finc.`id`\n" +
                                                            "INNER JOIN grupos grup ON grup.`id_tipo_animal` = tipo.`id`\n" +
                                                            "LEFT JOIN `macrogrupos` macr ON macr.`id_finca` = finc.`id` AND grup.`id_macrogrupo` = macr.`id`\n" +
                                                            "INNER JOIN `traslado_animalxgrupo` traslado ON traslado.`id_finca` = finc.`id` AND \n" +
                                                            "traslado.`id_grupo` = grup.`id` AND traslado.`estado` = 'Activo'\n" +
                                                            "INNER JOIN `animales` animal ON animal.`id` = `traslado`.`id_animal` AND animal.venta = '0' AND animal.`muerte` = '0'\n"+
                                                            "LEFT JOIN `rotacion_lotesxgrupo` rotgrup ON rotgrup.`id_grupo` = grup.`id` AND rotgrup.`estado` = 'Activo'\n" +
                                                            "LEFT JOIN `rotacion_lotesxestado` rot ON rot.`id` = rotgrup.`id_rotacion_lotesxestado`\n" +
                                                            "LEFT JOIN `lotes` lot ON lot.`id` = rot.`id_lote`\n" +
                                                            "LEFT JOIN bloques bloq ON bloq.`id` = lot.`id_bloque` \n" +
                                                            "WHERE finc.`id` IN ("+in+") AND tipo.`estado` = 'Activo' AND grup.`estado` = 'Activo'\n" +
                                                            "GROUP BY finc.`id`, grup.`id` \n" +
                                                            "ORDER BY grup.`id` ASC ");
    }

    private String getIN(List<Map<String, String>> ListaFincasInforme) {
        String in = "";
        for(Map<String, String> obj: ListaFincasInforme){
            in += (in.equals("")?"":",")+"'"+obj.get("ID")+"'";
        }
        return in;
    }

    private void MostrarInforme() {
        ListaGruposInforme = controlgen.data_list(1, ListaInformacionGrupos, new String[]{"IDGRUPO"});
        getGruposEncabezado();
        cantpnlInformes = ListaGruposEncabezado.size()+3;
        
        LlenarPnlInformeEncabezado();
        
        
        int tamantF = 25;
        int tamant = 25;
        int taX = 0;
        System.out.println("ListaFincasInforme-->"+ListaFincasInforme.size());
        int fila = 1;
        for (int i = 0; i < ListaFincasInforme.size(); i++) {
            List<Map<String, String>> listaBloquesxFinca = controlgen.data_list(1, ListaInformacionGrupos, new String[]{"IDBLOQUE"}, new String[]{"IDFINCA<->" + ListaFincasInforme.get(i).get("ID")});
            System.out.println("listaBloquesxFinca--->"+listaBloquesxFinca.size());
            taX = 0;
            Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            Integer.parseInt(ListaFincasInforme.get(i).get("ID")), // ID
                            ListaFincasInforme.get(i).get("DESCRIPCION"), // DATO
                            getOriXInforme(0, taX), // X
                            getOriYInforme(fila, tamantF), // Y
                            140, // widthPnl
                            125, // widthLblD
                            15, // widthLblC 
                            (listaBloquesxFinca.size()*25), // heightPnl
                            20, // height
                            3,          // padding  
                            Color.BLUE,          // padding
                            true));          // padding
            
            for(int j = 0; j < listaBloquesxFinca.size(); j++){
                taX = 140;
                Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            Integer.parseInt(listaBloquesxFinca.get(j).get("IDBLOQUE")), // ID
                            listaBloquesxFinca.get(j).get("BLOQUE"), // DATO
                            getOriXInforme(1, taX), // X
                            getOriYInforme(fila), // Y
                            140, // widthPnl
                            125, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding  
                            Color.BLUE,          // padding
                            false));          // padding
                
                taX += 140;
                int sumaFila = 0;
                for(int g = 0; g < ListaGruposEncabezado.size(); g++){
                   
                    if(g > 0)
                        taX += 120;
                    
                    List<Map<String, String>> listaInformacion = controlgen.data_list(3, ListaInformacionGrupos, new String[]{"IDFINCA<->" + ListaFincasInforme.get(i).get("ID"), "IDBLOQUE<->" + listaBloquesxFinca.get(j).get("IDBLOQUE"), "GRUPO<->" + ListaGruposEncabezado.get(g).get("GRUPO")});
                    System.out.println("listaInformacion-->"+listaInformacion.size());
                    if(listaInformacion.size()> 0){//TRAE ALGO
                        int s = Integer.parseInt(ListaGruposEncabezado.get(g).get("SUMA"));
                        sumaFila+=Integer.parseInt(listaInformacion.get(0).get("SUMAANIMALES"));
                        s +=  Integer.parseInt(listaInformacion.get(0).get("SUMAANIMALES"));
                        ListaGruposEncabezado.get(g).put("SUMA", ""+s);
                        
                        Lista_Informe_pnl.add(
                                        new ModeloDatosMultiple(
                                                0, // ID
                                                listaInformacion.get(0).get("SUMAANIMALES"), // DATO
                                                getOriXInforme((i+2), taX), // X
                                                getOriYInforme(fila), // Y
                                                120, // widthPnl
                                                105, // widthLblD
                                                15, // widthLblC 
                                                25, // heightPnl
                                                20, // height
                                                3,          // padding  
                                                Color.BLUE,          // padding
                                                false));          // padding
                    }else{
                        sumaFila+=0;
                        Lista_Informe_pnl.add(
                                        new ModeloDatosMultiple(
                                                0, // ID
                                                ""+0, // DATO
                                                getOriXInforme((i+2), taX), // X
                                                getOriYInforme(fila), // Y
                                                120, // widthPnl
                                                105, // widthLblD
                                                15, // widthLblC 
                                                25, // heightPnl
                                                20, // height
                                                3,          // padding  
                                                Color.BLUE,          // padding
                                                false));          // padding
                    }
                }
                taX+=120;
        
                Lista_Informe_pnl.add(
                            new ModeloDatosMultiple(
                                    0, // ID
                                    ""+sumaFila, // DATO
                                    getOriXInforme(ListaGruposEncabezado.size()+2, taX), // X
                                    getOriYInforme(fila), // Y
                                    90, // widthPnl
                                    75, // widthLblD
                                    15, // widthLblC 
                                    25, // heightPnl
                                    20, // height
                                    3,          // padding
                                    Color.GRAY,          // Color
                                    false));          // isfalse
                
                fila++;
            }
            
            
            
            tamantF += (listaBloquesxFinca.size()*25);
            
        }
        MostrarSumaPORGRUPO(fila);
        CrearInforme();
        
    } 
      
    public int getOriXInforme(int mod, int tamant) {
        int ret = -1;
        ret = 3 + tamant;
        return ret;
    }

    private int getOriYInforme(int fila) {
        int ret = -1;
        ret = 3 + (fila * 25);
        return ret;
    }
    private int getOriYInforme(int fila, int tamant) {
        int ret = -1;
        System.out.println("tammm---<"+tamant);
        ret = 3 + tamant;
        System.out.println("ret--->"+ret);
        return ret;
    }
    
    private void LlenarPnlInforme() {
        System.out.println("********LlenarPnlGrupos********");
        System.out.println("ListaGruposSeleccionados.size()->" + ListaFincasMostrar.size());
        for (int i = 0; i < ListaFincasMostrar.size(); i++) {
            
            Lista_Fincas_pnl.add(
                    new ModeloDatosMultiple(
                            Integer.parseInt(ListaFincasMostrar.get(i).get("ID")), // ID
                            ListaFincasMostrar.get(i).get("DESCRIPCION"), // DATO
                            getOriXInforme(i, 0), // X
                            getOriYInforme(i), // Y
                            175, // widthPnl
                            160, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding
                            Color.BLUE,          // padding
                            false));          // padding
        }
        MostrarFincasSeleccionados();
    }

    private void getGruposEncabezado() {
        ArrayList<Integer> indices = new ArrayList<>();
        boolean encontro = false;
        ListaGruposEncabezado = new ArrayList<>();
        for(int i = 0; i < ListaGruposInforme.size(); i++){
            encontro = false;
            for(int j = 0; j < ListaGruposEncabezado.size(); j++){
                if(ListaGruposEncabezado.get(j).get("GRUPO").equals(ListaGruposInforme.get(i).get("GRUPO"))){
                    encontro = true;
                    break;
                }
            }
            if(!encontro){
                Map<String, String> dato = new HashMap<>();
                dato.put("GRUPO", ListaGruposInforme.get(i).get("GRUPO"));
                dato.put("SUMA", "0");
                ListaGruposEncabezado.add(dato);
            }
            
        }
    }

    private void LlenarPnlInformeEncabezado() {
        int ta = 0;
        Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            0, // ID
                            "FINCA", // DATO
                            getOriXInforme(0, 0), // X
                            getOriYInforme(0), // Y
                            140, // widthPnl
                            125, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding
                            Color.GRAY,          // Color
                            false));          // isfalse
        ta += 140;
        Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            0, // ID
                            "BLOQUE", // DATO
                            getOriXInforme(1, ta), // X
                            getOriYInforme(0), // Y
                            140, // widthPnl
                            125, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding
                            Color.GRAY,          // Color
                            false));          // isfalse
        ta += 140;
        
        for (int i = 0; i < ListaGruposEncabezado.size(); i++) {
            
            if(i > 0)
                ta += 120;
            Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            0, // ID
                            ListaGruposEncabezado.get(i).get("GRUPO"), // DATO
                            getOriXInforme((i+2), ta), // X
                            getOriYInforme(0), // Y
                            120, // widthPnl
                            105, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding
                            Color.GRAY,          // padding
                            false));          // padding
        }
        ta+=120;
        
        Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            0, // ID
                            "TOTAL", // DATO
                            getOriXInforme(ListaGruposEncabezado.size()+2, ta), // X
                            getOriYInforme(0), // Y
                            90, // widthPnl
                            75, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding
                            Color.GRAY,          // Color
                            false));          // isfalse
    }
    
    private void CrearInforme() {
//        System.out.println("*****************MostrarSeleccionados***************+" + Lista_Fincas_pnl.size());
        ind = -1;
//        System.out.println("Lista_Grupos_Seleccionados-->" + Lista_Fincas_pnl.size());
        pnlInforme.removeAll();
        repaint();

        for (ModeloDatosMultiple obj : Lista_Informe_pnl) {
            ind++;
            javax.swing.JPanel pnlDato = new javax.swing.JPanel();
            javax.swing.JLabel lblnombre = new javax.swing.JLabel();
            javax.swing.JLabel lblCerrar = new javax.swing.JLabel();
            ///[26,82,118]
            pnlDato.setBackground(obj.getColor());
            pnlDato.setForeground(new java.awt.Color(255, 255, 255));
            pnlDato.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            pnlDato.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, false));
            pnlDato.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            lblnombre.setText(obj.getDatosMostrar());
            lblnombre.setForeground(new java.awt.Color(255, 255, 255));
            lblnombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

            lblCerrar.setFont(new java.awt.Font("Tahoma", 1, 12));
            lblCerrar.setText("X");//MousePressed
//            lblCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconos/verBlanco.png")));
            lblCerrar.setName("" + ind);
            lblCerrar.setForeground(new java.awt.Color(255, 255, 255));
            lblCerrar.setCursor(new Cursor(Cursor.HAND_CURSOR));
            
            lblCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    int indr = Integer.parseInt(evt.getComponent().getName());
                    ActualizarFincasSeleccionadosMostrar(indr);
//                    Lista_Animales_Seleccionados.remove(indr);
//                    RecargarListaSeleccionados();
//                    MostrarAnimalesSeleccionados(); 
                }

                
            });
            pnlDato.setToolTipText(obj.getDatosMostrar());
            
            
            
            if(obj.isIsfinca()==true){
                int alto = obj.getHeightPnl()/2 - obj.getHeight()/2;
                
                pnlDato.add(lblnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, alto, obj.getWidthLblD(), obj.getHeight()));
                pnlDato.add(lblCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(3 + obj.getWidthLblD(), 0, obj.getWidthLblC(), obj.getHeight()));
            }else{
                pnlDato.add(lblnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 3, obj.getWidthLblD(), obj.getHeight()));
            }
            
//            System.out.println("obj.getX()-->" + obj.getDatosMostrar());
//            System.out.println("obj.getX()-->" + obj.getX());
//            System.out.println("obj.getY()-->" + obj.getY());
//            System.out.println("obj.isIsfinca()-->"+obj.isIsfinca());
            
            pnlInforme.add(pnlDato, new org.netbeans.lib.awtextra.AbsoluteConstraints(obj.getX(), obj.getY(), obj.getWidthPnl(), obj.getHeightPnl()));
            pnlInforme.repaint();
        }

//        System.out.println("*********ancho=("+this.getWidth()+")***********");
//        System.out.println("*********alto=("+this.getHeight()+")***********");
        vPrin.pnlContenedor.setSize(this.getWidth(), this.getHeight()+40);
        //vPrin.setSize(this.getWidth(), this.getHeight()+40);
        vPrin.pack();
    }
    
    private void ActualizarFincasSeleccionadosMostrar(int indr) {
        Map<String, String> datos = new HashMap<>();
        datos.put("ID", ""+Lista_Informe_pnl.get(indr).getId());
        datos.put("DESCRIPCION", Lista_Informe_pnl.get(indr).getDatosMostrar());
        
        Lista_Fincas_pnl.add(Lista_Informe_pnl.get(indr));
        
        //Lista_Informe_pnl.remove(indr);
        int indi = getIndiceFinca(Lista_Informe_pnl.get(indr).getId());
        ListaFincasInforme.remove(indi);
        Lista_Informe_pnl = new ArrayList<>();
        pnlInforme.removeAll();
        repaint();
        ImprimirDatos();
        
        
        RecargarListaSeleccionados();
        MostrarFincasSeleccionados();
       
        
    }

    private int getIndiceFinca(int id) {
        int ret = 0;
        for(int i = 0; i < ListaFincasInforme.size(); i++){
            if(ListaFincasInforme.get(i).get("ID").equals(""+id)){
                ret = i;
                break;
            }
        }
        return ret;
    }

    private void MostrarSumaPORGRUPO(int fila) {
        int tamantF = 25;
        int tamant = 25;
        int taX = 0;
        Lista_Informe_pnl.add(
                new ModeloDatosMultiple(
                        0, // ID
                        "TOTAL", // DATO
                        getOriXInforme(0, taX), // X
                        getOriYInforme(fila), // Y
                        140, // widthPnl
                        125, // widthLblD
                        15, // widthLblC 
                        25, // heightPnl
                        20, // height
                        3,          // padding  
                        Color.GRAY,          // padding
                        false));          // padding
        taX = 140;
        Lista_Informe_pnl.add(
            new ModeloDatosMultiple(
                    0, // ID
                    "", // DATO
                    getOriXInforme(1, taX), // X
                    getOriYInforme(fila), // Y
                    140, // widthPnl
                    125, // widthLblD
                    15, // widthLblC 
                    25, // heightPnl
                    20, // height
                    3,          // padding  
                    Color.GRAY,          // padding
                    false));          // padding
                
        taX += 140;
        int sumaFila = 0;
                        
            
        for(int i = 0; i< ListaGruposEncabezado.size() ; i++){
            int s = Integer.parseInt(ListaGruposEncabezado.get(i).get("SUMA"));
            sumaFila+=s;
            if(i > 0)
                taX += 120;   
            Lista_Informe_pnl.add(
                            new ModeloDatosMultiple(
                                    0, // ID
                                    ""+s, // DATO
                                    getOriXInforme((i+2), taX), // X
                                    getOriYInforme(fila), // Y
                                    120, // widthPnl
                                    105, // widthLblD
                                    15, // widthLblC 
                                    25, // heightPnl
                                    20, // height
                                    3,          // padding  
                                    Color.GRAY,          // padding
                                    false));          // padding
        }
        
        taX+=120;
        
        Lista_Informe_pnl.add(
                    new ModeloDatosMultiple(
                            0, // ID
                            ""+sumaFila, // DATO
                            getOriXInforme(ListaGruposEncabezado.size()+2, taX), // X
                            getOriYInforme(fila), // Y
                            90, // widthPnl
                            75, // widthLblD
                            15, // widthLblC 
                            25, // heightPnl
                            20, // height
                            3,          // padding
                            Color.GRAY,          // Color
                            false));          // isfalse
        
        
    }
    
}
